server:
  port: ${PORT:0}
  error:
    whitelabel:
      enabled: false

spring:
  application:
    name: Users Service
  aop:
    proxy-target-class: false
  main:
    allow-bean-definition-overriding: true
  web:
    locale: en
    resources:
      add-mappings: false
  profiles:
    active: ${SPRING_ACTIVE_PROFILES:dev}
  jmx:
    enabled: false
  mvc:
    throw-exception-if-no-handler-found: true
    format:
      date-time: iso
      date: iso
      time: iso
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  sql:
    init:
      platform: postgres
  datasource:
    driverClassName: org.postgresql.Driver
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    hikari:
      auto-commit: false
  flyway:
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0.0
  output:
    ansi:
      enabled: always

application-props:
  retry-attempts: 5
  api-path-prefix: /api
  aws:
    url: ${AWS_URL}
    user-deleted-queue-name: ${AWS_QUEUE_NAME}

cloud:
  aws:
    region:
      static: ${AWS_REGION}
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    sns:
      enabled: true
      endpoint: ${AWS_ENDPOINT}
    sqs:
      enabled: false
---

spring:
  config:
    activate:
      on-profile: dev
    import:
      - optional:file:./.env.dev[.properties]
      - optional:file:./app-users/.env.dev[.properties]

cloud:
  aws:
    sns:
      endpoint: ${AWS_ENDPOINT}
